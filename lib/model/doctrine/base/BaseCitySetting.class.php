<?php

/**
 * BaseCitySetting
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $setting_id
 * @property string $telephone
 * @property string $telephone2
 * @property string $twitter
 * @property string $instagram
 * @property string $facebook
 * @property string $vk
 * @property SxGeoCity $Cities
 * 
 * @method integer     getSettingId()  Returns the current record's "setting_id" value
 * @method string      getTelephone()  Returns the current record's "telephone" value
 * @method string      getTelephone2() Returns the current record's "telephone2" value
 * @method string      getTwitter()    Returns the current record's "twitter" value
 * @method string      getInstagram()  Returns the current record's "instagram" value
 * @method string      getFacebook()   Returns the current record's "facebook" value
 * @method string      getVk()         Returns the current record's "vk" value
 * @method SxGeoCity   getCities()     Returns the current record's "Cities" value
 * @method CitySetting setSettingId()  Sets the current record's "setting_id" value
 * @method CitySetting setTelephone()  Sets the current record's "telephone" value
 * @method CitySetting setTelephone2() Sets the current record's "telephone2" value
 * @method CitySetting setTwitter()    Sets the current record's "twitter" value
 * @method CitySetting setInstagram()  Sets the current record's "instagram" value
 * @method CitySetting setFacebook()   Sets the current record's "facebook" value
 * @method CitySetting setVk()         Sets the current record's "vk" value
 * @method CitySetting setCities()     Sets the current record's "Cities" value
 * 
 * @package    erotic-massage-egostudio
 * @subpackage model
 * @author     Vasilisa the Wise
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCitySetting extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('city_setting');
        $this->hasColumn('setting_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('telephone', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('telephone2', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('twitter', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('instagram', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('facebook', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('vk', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('SxGeoCity as Cities', array(
             'local' => 'setting_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'owningSide' => true));
    }
}